{"version":3,"sources":["store/menuStore.js","store/fileModalStore.js","store/pgnListStore.js","components/MainHeader.js","components/sidebar/CarPanel.js","components/sidebar/SearchPanel.js","components/sidebar/SidebarMenu.js","components/MainSidebar.js","components/content/Header.js","components/content/Charts.js","components/content/Content.js","file/useFileHandlers.js","components/FileModal.js","components/CarModal.js","components/MainContent.js","components/MainFooter.js","App.js","serviceWorker.js","index.js"],"names":["MenuStore","_this","this","Object","classCallCheck","show","showCarModal","vehicaleName","fetch","then","response","json","result","setVehicaleName","name","_this2","method","headers","Content-type","body","JSON","stringify","loadVehicalName","_this3","decorate","observable","isOpenLeftPanel","computed","isShowCarModal","getVehicalName","action","toggleLeftPanel","toggleCarModal","menuStore","ModalStore","filesCount","r","setFilesCount","count","n","isOpenModal","openFileModal","closeFileModal","hideFileModal","appendFiles","clearFiles","modalStore","PgnListStore","filter","list","setList","pgnName","map","v","checked","_this4","el","toLowerCase","indexOf","getList","checkedList","setfilter","clearList","updateList","checkList","pgnListStore","MainHeader","observer","react_default","a","createElement","className","href","Nav_default","role","onClick","e","preventDefault","src","alt","CarPanel","SearchPanel","onChange","target","value","type","placeholder","id","SidebarMenu","index","key","cn","check-menu","MainSidebar","sidebar_CarPanel","sidebar_SearchPanel","sidebar_SidebarMenu","ContentHeader","Charts","props","possibleConstructorReturn","getPrototypeOf","call","state","leftBtn","rightBtn","shift","limit","data","unit","shiftLeft","bind","assertThisInitialized","shiftRight","renderMyData","setState","prevState","offset","pgn","url","URL","window","location","protocol","host","param","search","URLSearchParams","responseJson","pgnUnit","catch","error","console","title","data-original-title","disabled","es6","margin","top","right","left","bottom","strokeDasharray","dataKey","label","dx","stroke","activeDot","PureComponent","Content","Charts_Charts","initialState","files","pending","next","uploading","uploaded","status","reducer","objectSpread","defineProperty","prev","file","uploadError","api","formData","FormData","append","useFileHandlers","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useEffect","length","countRef","useRef","num","color","arguments","undefined","msg","concat","style","log","logUploadedFile","current","slice","onSubmit","useCallback","alert","Array","from","createObjectURL","onInitialState","Input","assign","multiple","FileModal","_useFileHandlers","closeForm","Modal_default","onHide","animation","Header","closeButton","Title","Form_default","Body","Group","FileModal_Input","_ref","opacity","Footer","Button_default","variant","CarModal","changeVehicaleName","Control","size","changeName","updateName","MainContent","components_FileModal","components_CarModal","content_Content","MainFooter","App","sidebar-collapse","sidebar-open","components_MainHeader","components_MainSidebar","components_MainContent","components_MainFooter","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.983bae67.chunk.js","sourcesContent":["import { observable, \r\n    computed, \r\n    action, \r\n    decorate } from \"mobx\";\r\n\r\n\r\nclass MenuStore {\r\n    constructor(){\r\n        this.show = false;\r\n        this.showCarModal = false;\r\n        this.vehicaleName = 'Unknow Vehicale';\r\n        fetch('/api/vehicleName')\r\n        .then(response => response.json())\r\n        .then(result => {this.setVehicaleName(result.name);});\r\n    }\r\n  \r\n    get isOpenLeftPanel() {\r\n        return this.show;\r\n      }\r\n\r\n    get isShowCarModal() {\r\n        return this.showCarModal;\r\n      }\r\n    \r\n    get getVehicalName() {\r\n        return this.vehicaleName;\r\n      }\r\n    \r\n    changeVehicaleName(){\r\n      fetch('/api/changeName', {\r\n        method: 'POST',\r\n        headers: {  \r\n          \"Content-type\": \"application/json\"  \r\n        },\r\n        body: JSON.stringify({name:this.vehicaleName})\r\n      }).then(response => {if(response !== 'ok') this.loadVehicalName();});\r\n    }\r\n\r\n    loadVehicalName(){\r\n      fetch('/api/vehicleName')\r\n        .then(response => response.json())\r\n        .then(result => {this.setVehicaleName(result.name);});\r\n    }\r\n    \r\n    setVehicaleName(name) {\r\n      this.vehicaleName = name;\r\n    }\r\n\r\n    toggleLeftPanel() {\r\n        this.show = !this.show;\r\n    }\r\n    \r\n    toggleCarModal() {\r\n        this.showCarModal = !this.showCarModal;\r\n      }\r\n    \r\n  }\r\n\r\n  decorate(MenuStore, {\r\n    show: observable,\r\n    showCarModal: observable,\r\n    vehicaleName: observable,\r\n    isOpenLeftPanel: computed,\r\n    isShowCarModal: computed,\r\n    getVehicalName: computed,\r\n    loadVehicalName: action,\r\n    toggleLeftPanel: action,\r\n    toggleCarModal: action,\r\n    setVehicaleName: action\r\n  });\r\n\r\n  const menuStore = new MenuStore();\r\n\r\n  export default menuStore;","import { observable, \r\n    computed, \r\n    action, \r\n    decorate } from \"mobx\";\r\n\r\n    class ModalStore {\r\n        constructor(){\r\n            this.show = false;\r\n            this.filesCount = 0;\r\n            fetch('/api/fileCount')\r\n            .then(response => response.json())\r\n            .then(r => {this.setFilesCount(r.count);});\r\n        }\r\n      \r\n        setFilesCount(n) {\r\n\r\n          this.filesCount = n;\r\n        }\r\n\r\n        get isOpenModal() {\r\n            return this.show;\r\n          }\r\n        \r\n        openFileModal() {\r\n            this.show = true;\r\n          }\r\n    \r\n        closeFileModal() {\r\n            this.show = false;\r\n          }\r\n\r\n        hideFileModal() {\r\n            this.show = false;\r\n        }\r\n\r\n        appendFiles(count){\r\n          this.filesCount += count;\r\n        }\r\n\r\n        clearFiles(){\r\n          this.filesCount = 0;\r\n        }\r\n\r\n      }\r\n    \r\n      decorate(ModalStore, {\r\n        show: observable,\r\n        filesCount: observable,\r\n        isOpenModal: computed,\r\n        openFileModal: action,\r\n        closeFileModal: action,\r\n        hideFileModal: action,\r\n        appendFiles:action,\r\n        clearFiles:action,\r\n      });\r\n    \r\n      const modalStore = new ModalStore();\r\n    \r\nexport default modalStore;","import { observable, \r\n    computed, \r\n    action, \r\n    decorate } from \"mobx\";\r\n\r\nclass PgnListStore {\r\n    \r\n    constructor(){\r\n        this.filter = '';\r\n        this.list = [];\r\n        fetch('/api/pgnlist')\r\n        .then(response => response.json())\r\n        .then(list => {this.setList(list);});\r\n    }\r\n\r\n    setList(list) {\r\n        this.list = list;\r\n    }\r\n      \r\n    get getList() {\r\n        return this.list.filter((el) => el.name.toLowerCase().indexOf(this.filter.toLowerCase()) > -1);\r\n    }\r\n\r\n    get checkedList() {\r\n        return this.list.filter((el) => (el.checked===true));\r\n    }\r\n\r\n    checkList(pgnName){\r\n        /* set check for list */\r\n        this.list = this.list.map((v) => {\r\n            if (v.name===pgnName) { \r\n                v.checked = !v.checked;\r\n                return v;\r\n            }\r\n            return v;\r\n        });\r\n    }\r\n    \r\n    setfilter(filter) {\r\n        this.filter = filter;\r\n    }\r\n\r\n    clearList() {\r\n        fetch('/api/pgnclear')\r\n        .then(response => {this.filter = ''; this.list = []; });\r\n    }\r\n\r\n    updateList() {\r\n        fetch('/api/pgnlist')\r\n        .then(response => response.json())\r\n        .then(list => {this.setList(list);});\r\n    }\r\n}\r\n    \r\ndecorate(PgnListStore, {\r\n        filter: observable,\r\n        list: observable,\r\n        getList: computed,\r\n        checkedList: computed,\r\n        setfilter: action,\r\n        clearList: action,\r\n        updateList:action,\r\n        checkList:action\r\n});\r\n    \r\n      const pgnListStore = new PgnListStore();\r\n    \r\n      export default pgnListStore;\r\n      export { PgnListStore };","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { observer } from 'mobx-react';\r\n\r\n/* stores */\r\nimport menuStore from '../store/menuStore';\r\nimport modalStore from '../store/fileModalStore';\r\nimport pgnListStore from '../store/pgnListStore';\r\n\r\nconst MainHeader = observer(() => {\r\n\r\n  const toggleLeftPanel = (e) => {\r\n    e.preventDefault(); \r\n    menuStore.toggleLeftPanel();\r\n  };\r\n\r\n  const toggleCarModal = (e) => {\r\n    e.preventDefault(); \r\n    menuStore.toggleCarModal();\r\n  };\r\n\r\n  const clearData = (e) => {\r\n    e.preventDefault();  \r\n    modalStore.clearFiles(); \r\n    pgnListStore.clearList();\r\n  };\r\n\r\n  const fileModal = (e) => {\r\n    e.preventDefault(); \r\n    modalStore.openFileModal();\r\n  };\r\n\r\n  return (\r\n  /* jshint ignore:start */\r\n  <header className=\"main-header\">\r\n    <a href=\"index2.html\" className=\"logo\"><b>CAN</b>View</a>\r\n    <Nav className=\"navbar navbar-static-top\" role=\"navigation\">\r\n        <a href=\"index.html\" onClick={toggleLeftPanel} className=\"sidebar-toggle\">\r\n            <span className=\"sr-only\">Toggle navigation</span>\r\n        </a>\r\n        <div className=\"navbar-custom-menu\">\r\n          <ul className=\"nav navbar-nav\">\r\n            <li className=\"dropdown messages-menu\">\r\n              <a href=\"index.html\" onClick={clearData} className=\"dropdown-toggle\">\r\n                  <i className=\"fa fa-eraser\"></i>\r\n                </a>\r\n            </li>\r\n            <li className=\"dropdown messages-menu\">\r\n              <a href=\"index.html\" onClick={fileModal} className=\"dropdown-toggle\">\r\n                  <i className=\"fa fa-folder-o\"></i>\r\n                  <span className=\"label label-success\">{modalStore.filesCount}</span>\r\n                </a>\r\n            </li>\r\n            <li className=\"dropdown user user-menu\">\r\n              <a href=\"index.html\" className=\"dropdown-toggle\" onClick={toggleCarModal} >\r\n                  <img src=\"/img/car_view.png\" className=\"user-image\" alt=\"Car View\"/>\r\n                  <span className=\"hidden-xs\">{menuStore.vehicaleName}</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </Nav>\r\n    </header>\r\n  /* jshint ignore:end */\r\n  );\r\n  });\r\n\r\n\r\nexport default MainHeader;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport menuStore from '../../store/menuStore';\r\n\r\nconst CarPanel = observer(() => {\r\n    /* jshint ignore:start */\r\n    return (\r\n            <div className=\"user-panel\" onClick = {()=>{menuStore.toggleCarModal()}}>\r\n                    <div className=\"pull-left image\">\r\n                        <img src=\"/img/car_view.png\" className=\"img-circle\" alt=\"Car View\" />\r\n                        </div>\r\n                        <div className=\"pull-left info\">\r\n                        <p>{menuStore.vehicaleName}</p>\r\n                        <a href=\"index.html\" onClick = {e=>{e.preventDefault(); menuStore.toggleCarModal()}}><i className=\"fa fa-circle text-success\"></i> Online</a>\r\n                    </div>\r\n            </div>\r\n    );\r\n    /* jshint ignore:end */\r\n});\r\n\r\nexport default CarPanel;","import React from 'react';\r\n\r\n/* stores */\r\nimport PgnListStore from '../../store/pgnListStore';\r\n\r\nfunction SearchPanel() {\r\n    /* jshint ignore:start */\r\n    return (\r\n        <form action=\"#\" method=\"get\" className=\"sidebar-form\">\r\n            <div className=\"input-group\">\r\n                <input onChange={(e) => PgnListStore.setfilter(e.target.value)} type=\"text\" name=\"q\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <span className=\"input-group-btn\">\r\n                    <button type='submit' name='search' id='search-btn' className=\"btn btn-flat\">\r\n                        <i className=\"fa fa-search\"></i></button>\r\n                </span>\r\n            </div>\r\n        </form>\r\n    );\r\n    /* jshint ignore:end */\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport cn from 'classnames';\r\n\r\n/* stores */\r\nimport PgnListStore from '../../store/pgnListStore';\r\n\r\n/* styles */\r\nimport './sidebar.css';\r\n\r\nconst SidebarMenu = observer(() => {\r\n    return (\r\n    /* jshint ignore:start */\r\n    <ul className=\"sidebar-menu\">\r\n        <li className=\"header\">Parameter Group Label</li>\r\n        {PgnListStore.getList.map((el,index) => (\r\n            <li key={index} className=\"treeview\">\r\n                <a href=\"index.html\" \r\n                onClick={(e)=>{e.preventDefault(); PgnListStore.checkList(el.name)}} \r\n                className= {cn({'check-menu':el.checked? true : false})}>\r\n                <i className=\"fa fa-files-o\"></i>\r\n                <span>{el.name}</span>\r\n                <span className=\"label label-primary pull-right\">{el.count}</span>\r\n                </a>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    /* jshint ignore:end */\r\n    );}\r\n    );\r\n\r\n\r\nexport default SidebarMenu;","import React from 'react';\r\nimport CarPanel from './sidebar/CarPanel';\r\nimport SearchPanel from './sidebar/SearchPanel';\r\nimport SidebarMenu from './sidebar/SidebarMenu';\r\n\r\nfunction MainSidebar() {\r\n    /* jshint ignore:start */\r\n    return (\r\n        <aside className=\"main-sidebar\">\r\n             {/* sidebar: style can be found in sidebar.less */}\r\n            <section className=\"sidebar\">\r\n                \r\n                {/* Sidebar Car panel */}\r\n                <CarPanel/>\r\n\r\n                {/* search form */}\r\n                <SearchPanel/>\r\n\r\n                {/* sidebar menu */}\r\n                <SidebarMenu/>\r\n            </section>\r\n        </aside>\r\n    );\r\n    /* jshint ignore:end */\r\n}\r\n\r\nexport default MainSidebar;","import React from 'react';\r\n\r\nfunction ContentHeader() {\r\n  \r\n  return (\r\n  /* jshint ignore:start */\r\n  <section className=\"content-header\">\r\n    <h1>\r\n      Dashboard \r\n        <small>Version 0.01</small>\r\n    </h1>\r\n  </section>\r\n  /* jshint ignore:end */\r\n  );\r\n}\r\n\r\nexport default ContentHeader;","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport './Charts.css';\r\nimport PgnListStore from '../../store/pgnListStore';\r\n\r\nexport default class Charts extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      leftBtn: true,\r\n      rightBtn: false,\r\n      shift: 0,\r\n      limit: 200,\r\n      data : null,\r\n      unit : ''\r\n    };\r\n\r\n    this.shiftLeft = this.shiftLeft.bind(this);\r\n    this.shiftRight = this.shiftRight.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n      this.renderMyData();\r\n  }\r\n\r\n  shiftLeft(){\r\n    this.setState((prevState, props) => {\r\n      let offset = prevState.shift + 10;\r\n      return {shift : offset, \r\n        rightBtn : offset!==0, \r\n        leftBtn : offset+prevState.limit<props.count};\r\n    });\r\n    this.renderMyData();\r\n  }\r\n\r\n  shiftRight(){\r\n    this.setState((prevState, props) => { \r\n      let offset = (prevState.shift>10)?  prevState.shift-10: 0;\r\n      return { shift : offset,  \r\n        rightBtn : offset!==0,\r\n        leftBtn : offset+prevState.limit<props.count\r\n      };\r\n    });\r\n    this.renderMyData();\r\n  }\r\n\r\n  renderMyData(){\r\n      let pgnName = this.props.pgn || '';\r\n      let url = new URL('/api/loadpgn',window.location.protocol + \"//\" + window.location.host);\r\n      let param = {pgn: pgnName, offset: this.state.shift, limit: this.state.limit};\r\n      url.search = new URLSearchParams(param);\r\n      fetch(url)\r\n          .then((response) => response.json())\r\n          .then((responseJson) => {\r\n            this.setState({ data : responseJson, unit: responseJson[0].pgnUnit });\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    /* jshint ignore:start */\r\n    <div className='box box-info'>\r\n      <div className='box-header ui-sortable-handle'>\r\n        <i className=\"fa fa-car\"></i>\r\n        <h3 className=\"box-title\">{this.props.pgn}</h3>\r\n        <div className=\"pull-right box-tools\">\r\n          <button onClick={this.shiftLeft} \r\n            className=\"btn btn-info btn-sm btn-arrow\" \r\n            title=\"\" \r\n            data-original-title=\"Left\" \r\n            disabled={!this.state.leftBtn} >\r\n            <i className=\"fa fa-angle-left\"></i>\r\n          </button>\r\n          <button onClick={this.shiftRight} \r\n            className=\"btn btn-info btn-sm btn-arrow\" \r\n            title=\"\" \r\n            data-original-title=\"Right\"\r\n            disabled={!this.state.rightBtn}>\r\n            <i className=\"fa fa-angle-right\"></i>\r\n          </button>\r\n          <button onClick={()=>{PgnListStore.checkList(this.props.pgn);}} className=\"btn btn-info btn-sm\" title=\"\" data-original-title=\"Remove\">\r\n            <i className=\"fa fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='charts-container'>\r\n          <ResponsiveContainer>\r\n              <LineChart\r\n                  data={this.state.data}\r\n                  margin={{\r\n                  top: 5, right: 30, left: 20, bottom: 5,\r\n                  }}\r\n              >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"time\" />\r\n                  <YAxis label={{value:this.state.unit,  dx: -20}} />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Line name={this.props.pgn} type=\"monotone\" dataKey=\"pgnData\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n              </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n      /* jshint ignore:end */\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Charts from './Charts';\r\nimport PgnListStore from '../../store/pgnListStore';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Content = observer(() => {\r\n  return (\r\n  /* jshint ignore:start */\r\n  <section className=\"content\">\r\n    {PgnListStore.checkedList.map((el,index) => { \r\n      return(\r\n      <div key = {index} className=\"row\">\r\n        <Charts pgn = {el.name} count = {el.count} key = {el.name}/>\r\n      </div>  \r\n    )}\r\n    )}\r\n    \r\n  </section>\r\n  /* jshint ignore:end */\r\n  );}\r\n);\r\n\r\nexport default Content;","//import React from 'react';\r\nimport { useCallback, useEffect, useReducer, useRef } from 'react';\r\n\r\nconst LOADED = 'LOADED';\r\nconst INIT = 'INIT';\r\nconst PENDING = 'PENDING';\r\nconst FILES_UPLOADED = 'FILES_UPLOADED';\r\nconst UPLOAD_ERROR = 'UPLOAD_ERROR';\r\n\r\nconst initialState = {\r\n  files: [],\r\n  pending: [],\r\n  next: null,\r\n  uploading: false,\r\n  uploaded: {},\r\n  status: 'idle',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'load':\r\n        return { ...state, files: action.files, status: LOADED };\r\n      case 'submit':\r\n        return { ...state, uploading: true, pending: state.files, status: INIT };\r\n      case 'next':\r\n        return { ...state, next: action.next, status: PENDING };\r\n      case 'file-uploaded':\r\n          return {\r\n            ...state,\r\n            next: null,\r\n            pending: action.pending,\r\n            uploaded: {\r\n              ...state.uploaded,\r\n              [action.prev.id]: action.prev.file,\r\n            },\r\n          };\r\n      case 'files-uploaded':\r\n        return { ...state, uploading: false, status: FILES_UPLOADED };\r\n      case 'set-upload-error':\r\n        return { ...state, uploadError: action.error, status: UPLOAD_ERROR };\r\n      case 'clear':\r\n          return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n\r\nconst logUploadedFile = (num, color = 'green') => {\r\n    const msg = `%cUploaded ${num} files.`;\r\n    const style = `color:${color};font-weight:bold;`;\r\n    console.log(msg, style);\r\n  };\r\n\r\nconst api = {\r\n  // simulate an “upload” promise\r\n  uploadFile(file) {\r\n    \r\n    var formData  = new FormData();\r\n    formData.append('file', file.file);\r\n\r\n    return fetch('/api/upload', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n  }\r\n  };\r\n\r\nconst useFileHandlers = () => {\r\n  \r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const onChange = (e) => {\r\n        if (e.target.files.length) {\r\n        const arrFiles = Array.from(e.target.files);\r\n        const files = arrFiles.map((file, index) => {\r\n            const src = window.URL.createObjectURL(file);\r\n            // console.log('FileHandler File:', file, src, index);\r\n            return { file, id: index, src };\r\n        });\r\n        dispatch({ type: 'load', files });\r\n        }\r\n    };\r\n\r\n  const onInitialState = () => {\r\n      dispatch({ type: 'clear' });\r\n  };\r\n   \r\n    // Sets the next file when it detects that state.next can be set again\r\n    useEffect(() => {\r\n      if (state.pending.length && state.next == null) {\r\n        const next = state.pending[0];\r\n        dispatch({ type: 'next', next });\r\n      }\r\n    }, [state.next, state.pending]);\r\n\r\n\r\n    const countRef = useRef(0);\r\n// Processes the next pending thumbnail when ready\r\n\r\n  useEffect(() => {\r\n    if (state.pending.length && state.next) {\r\n      const { next } = state;\r\n      api\r\n        .uploadFile(next)\r\n        .then(() => {\r\n          const prev = next;\r\n          logUploadedFile(++countRef.current);\r\n          const pending = state.pending.slice(1);\r\n          dispatch({ type: 'file-uploaded', prev, pending });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          dispatch({ type: 'set-upload-error', error });\r\n        });\r\n    }\r\n  }, [state]);\r\n\r\n// Ends the upload process\r\n  useEffect(() => {\r\n      if (!state.pending.length && state.uploading) {\r\n        dispatch({ type: 'files-uploaded' });\r\n      }\r\n    }, [state.pending.length, state.uploading]);\r\n\r\n    const onSubmit = useCallback(\r\n        (e) => {\r\n          e.preventDefault();\r\n          if (state.files.length) {\r\n            dispatch({ type: 'submit' });\r\n          } else {\r\n            window.alert(\"You don't have any files loaded.\");\r\n          }\r\n        },\r\n        [state.files.length],\r\n      );\r\n  return {\r\n      ...state,\r\n      onSubmit,\r\n      onChange,\r\n      onInitialState,\r\n    };\r\n};\r\n\r\nexport default useFileHandlers;","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport useFileHandlers from \"../file/useFileHandlers\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n/* stores */\r\nimport modalStore from \"../store/fileModalStore\";\r\nimport pgnListStore from '../store/pgnListStore';\r\n\r\nconst Input = props => (\r\n  /* jshint ignore:start */\r\n  <input type=\"file\" name=\"file-input\" multiple {...props} />\r\n  /* jshint ignore:end */\r\n);\r\n\r\nconst FileModal = observer(() => {\r\n  const {\r\n    files,\r\n    // pending,\r\n    // next,\r\n    // uploading,\r\n    uploaded,\r\n    status,\r\n    onSubmit,\r\n    onChange,\r\n    onInitialState,\r\n  } = useFileHandlers();\r\n\r\n  const closeForm = () => {\r\n    modalStore.appendFiles(files.length);\r\n    onInitialState();\r\n    modalStore.hideFileModal();\r\n    pgnListStore.updateList();\r\n  };\r\n\r\n  return (\r\n    /* jshint ignore:start */\r\n    <Modal\r\n      show={modalStore.show}\r\n      onHide={closeForm}\r\n      animation={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Send files</Modal.Title>\r\n      </Modal.Header>\r\n      <Form className=\"form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          {status === \"FILES_UPLOADED\" && (\r\n            <div className=\"success-container\">\r\n              <div>\r\n                <small>You uploaded your files. Get some rest.</small>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Form.Group>\r\n            <Input onChange={onChange} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            {files.map(({ file, src, id }, index) => (\r\n              <div\r\n                style={{\r\n                  opacity: uploaded[id] ? 0.2 : 1\r\n                }}\r\n                key={`thumb${index}`}\r\n                className=\"thumbnail-wrapper\"\r\n              > \r\n                <div className=\"thumbnail-caption\">{uploaded[id] ? 'Loaded '+ file.name : file.name }</div>\r\n              </div>\r\n            ))}\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={closeForm}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Send files\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n    /* jshint ignore:end */\r\n  );\r\n});\r\n\r\nexport default FileModal;\r\n","import React, { PureComponent } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport menuStore from '../store/menuStore';\r\n\r\nclass CarModal extends PureComponent {\r\n    \r\n\r\n    closeForm() {\r\n        menuStore.toggleCarModal();\r\n        menuStore.loadVehicalName();\r\n    }\r\n\r\n    changeName(name) {\r\n        menuStore.setVehicaleName(name);\r\n    }\r\n\r\n    updateName() {\r\n        menuStore.toggleCarModal();\r\n        menuStore.changeVehicaleName();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        /* jshint ignore:start */\r\n        <Modal\r\n        show={menuStore.showCarModal}\r\n        onHide={this.closeForm}\r\n        animation={false}\r\n            >\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Change Vehicle Name</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n            <Form.Control \r\n                size=\"lg\" \r\n                type=\"text\" \r\n                placeholder=\"Vehicle Name\" \r\n                value={menuStore.vehicaleName}\r\n                onChange={(e) => {this.changeName( e.target.value )}} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button\r\n                variant=\"secondary\"\r\n                onClick={this.closeForm}\r\n            >\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={()=>this.updateName()}>\r\n                Change\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        /* jshint ignore:end */\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(CarModal);","import React from 'react';\r\nimport ContentHeader from './content/Header';\r\nimport Content from './content/Content'; \r\nimport FileModal from './FileModal';\r\nimport CarModal from './CarModal';\r\n\r\nfunction MainContent() {\r\n  \r\n  return (\r\n  /* jshint ignore:start */\r\n  <div className=\"content-wrapper\">\r\n      <ContentHeader/>\r\n      <FileModal/>\r\n      <CarModal/>\r\n      <Content/>\r\n  </div>\r\n  /* jshint ignore:end */\r\n  );\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\r\n\r\nfunction MainFooter() {\r\n  \r\n  return (\r\n  /* jshint ignore:start */\r\n  <footer className=\"main-footer\">\r\n      <div className=\"pull-right hidden-xs\">\r\n          <b>Version</b> 0.01\r\n        </div>\r\n        <strong>Copyright &copy; 2019 <a href=\"index.html\">Roman Korchagin</a>.</strong> All rights reserved.\r\n  </footer>\r\n  /* jshint ignore:end */\r\n  );\r\n}\r\n\r\nexport default MainFooter;","import React from 'react';\nimport MainHeader from './components/MainHeader';\nimport MainSidebar from './components/MainSidebar';\nimport MainContent from './components/MainContent';\nimport MainFooter from './components/MainFooter';\nimport cn from 'classnames';\nimport { observer } from 'mobx-react';\n\n/* stores */\nimport menuStore from './store/menuStore';\n\nconst App = observer(() => (\n  /* jshint ignore:start */\n    <div className={ cn('skin-blue', { 'sidebar-collapse': menuStore.show}, {'sidebar-open': menuStore.show}) } >\n    <div className=\"wrapper\">\n        <MainHeader/>\n        <MainSidebar/>\n        <MainContent/>\n        <MainFooter/>\n    </div>\n   </div>\n  /* jshint ignore:end */\n  ));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n /* jshint ignore:start */\nReactDOM.render( <App /> , document.getElementById('root'));\n/* jshint ignore:end */\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}